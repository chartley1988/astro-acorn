---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

type Props = {
  photos: ImageMetadata[];
  thumbSize: number;
};

const { photos, thumbSize = 150 } = Astro.props;
---

<!-- Thumbnails -->
<cluster-l space="var(--spacing-md)">
  {
    photos.map((photo, i) => {
      return (
        <button class="thumb" id={"thumb_" + i.toString()}>
          <Image
            src={photo}
            height={thumbSize}
            width={thumbSize}
            alt="Thumbnail of photo"
          />
        </button>

        <!-- Pop-up modal element of picture -->
        <dialog id={"picture_" + i.toString()}>
          <Image src={photo} width={1000} alt="Thumbnail of photo" />
        </dialog>
      );
    })
  }
</cluster-l>

<style>
  button {
    padding: 0;
    margin: 0;
  }

  img {
    object-fit: cover;
  }

  dialog {
    padding: 0;
    border: none;
    margin: auto;
  }

  dialog img {
    object-fit: cover;
    width: clamp(300px, 0.8, 1000px);
    height: auto;
  }

  dialog::backdrop {
    background-color: black;
    opacity: 0.75;
  }
</style>

<script>
  // Grabs all the thumbnail elements
  const thumbnails = document.getElementsByClassName("thumb");

  // Grabs all the photos in dialogs, hidden by default
  function getPhotos() {
    const photoArray = [];

    for (let i = 0; i < thumbnails.length; i++) {
      // Grab the element
      const element = document.getElementById(
        `picture_${i}`,
      ) as HTMLDialogElement;

      // Add element to array
      photoArray.push(element);

      // For each thumbnail button, listen for click to open dialog
      const button = thumbnails[i];
      button.addEventListener("click", (e) => {
        e.stopPropagation();
        element.showModal();
      });
    }
    return photoArray;
  }

  const photos = getPhotos() as HTMLDialogElement[];

  // For each photo, listen for a click to close dialog
  photos.forEach((element: HTMLDialogElement) => {
    element.addEventListener("click", (e) => {
      e.stopPropagation();
      element.close();
    });
  });
</script>
